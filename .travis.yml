language: cpp
sudo: false
dist: trusty
matrix:
  include:
    - os: linux
      addons: &1
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - doxygen
            - g++-7
            - gfortran
            - gfortran-7
            - python-dev
            - libatlas-dev
            - liblapack-dev
            - liblapacke-dev
            - libopenmpi-dev
            - openmpi-bin
            - libboost1.55-all-dev
            - uuid-dev
            - pkg-config
            - mingw-w64
#           - gcc-mingw-w64-i686
#           - g++-mingw-w64-i686
#           - gfortran-mingw-w64-i686
      env:
        - CMAKE_VERSION="3.11.0"
        - GENERATOR="Unix Makefiles"
        - BUILDFLAGS="VERBOSE=1"
    - os: linux
      addons: *1
      env:
        - CMAKE_VERSION="3.11.0"
        - GENERATOR="Ninja"
        - BUILDFLAGS="-v"
#   - os: linux
#     addons: *1
#     env:
#       - CMAKE_VERSION="3.5.2"
#       - GENERATOR="Unix Makefiles"
#       - BUILDFLAGS="VERBOSE=1"
#   - os: linux
#     addons: *1
#     env:
#       - CMAKE_VERSION="3.5.2"
#       - GENERATOR="Ninja"
#       - BUILDFLAGS="-v"
#   - os: osx
#     env:
#       - GENERATOR="Unix Makefiles"
#       - BUILDFLAGS="VERBOSE=1"
#   - os: osx
#     env:
#       - GENERATOR="Ninja"
#       - BUILDFLAGS="-v"

cache:
  timeout: 1000
  pip: true
  directories:
    - $HOME/Deps/cmake/3.5.2
    - $HOME/Deps/cmake/3.11.0
    - $HOME/Deps/eigen
    - $HOME/Deps/hdf5
    - $HOME/Deps/ninja
    - $HOME/Deps/conda

env:
  global:
    - PATH=$HOME/Deps/ninja${PATH:+:$PATH}
    - LD_LIBRARY_PATH=$HOME/Deps/hdf5/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
    - LC_ALL="en_US.UTF-8"
    - LANG="en_US.UTF-8"
    - LANGUAGE="en_US.UTF-8"
    - PYTHONIOENCODING=UTF-8

before_install:
  # Dependencies are downloaded in $HOME/Downloads and installed in $HOME/Deps
  - mkdir -p $HOME/Downloads $HOME/Deps

install:
  - travis_wait 30 ./testing/dependencies/install_dependencies.sh
  - export PATH=$HOME/Deps/cmake/$CMAKE_VERSION/bin${PATH:+:$PATH}
  - pipenv install
  - pipenv run python --version

before_script:
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC

script:
  - ./testing/dependencies/report_versions.sh
  - pipenv run python testing/collect_tests.py 'chapter-14/recipe-*'
  - ls -l /home/travis/build/bast/install/
